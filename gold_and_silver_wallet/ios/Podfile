# Uncomment this line to define a global platform for your project
# platform :ios, '13.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
  
  # Add build phase to copy secp256k1 library to the main app target
  app_project = Xcodeproj::Project.open(File.join(File.dirname(__FILE__), 'Runner.xcodeproj'))
  app_target = app_project.targets.first
  
  # Check if the build phase already exists
  phase_exists = app_target.shell_script_build_phases.any? { |phase| phase.name == 'Copy secp256k1 Library' }
  
  unless phase_exists
    phase = app_target.new_shell_script_build_phase('Copy secp256k1 Library')
    phase.shell_script = <<-SCRIPT
      SECP256K1_LIB="${SRCROOT}/../../secp256k1_wrapper/native/ios/libsecp256k1.dylib"
      FRAMEWORKS_DIR="${BUILT_PRODUCTS_DIR}/${FRAMEWORKS_FOLDER_PATH}"
      
      if [ -f "$SECP256K1_LIB" ]; then
        mkdir -p "$FRAMEWORKS_DIR"
        cp "$SECP256K1_LIB" "$FRAMEWORKS_DIR/"
        echo "✅ Copied secp256k1 library to $FRAMEWORKS_DIR"
      else
        echo "⚠️ Warning: secp256k1 library not found at $SECP256K1_LIB"
      fi
    SCRIPT
    app_project.save
    puts "✅ Added secp256k1 library copy build phase to Runner target"
  end
end
